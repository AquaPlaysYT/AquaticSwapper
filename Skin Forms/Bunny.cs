using MetroFramework.Forms;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Skin_Swapper__Sorry_
{
    public partial class Bunny : MetroForm
    {
        public Bunny()
        {
            InitializeComponent();
        }

        private void Bunny_Load(object sender, EventArgs e)
        {

        }

        private void MetroButton1_Click(object sender, EventArgs e)
        {
            if (checkPak())
            {
                txtbunny.Text = "[LOG] Skin Added Successfully";

                string path = Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak";
                if (File.Exists(path))
                {
                    RevertByte2(); 
                }
                else
                {

                }
            }
            else
            {
                MessageBox.Show("Please Select your pak folder in settings!");
            }
        }

        private void MetroButton2_Click(object sender, EventArgs e)
        {
            if (checkPak())
            {
                txtbunny.Text = "[LOG] Skin Reverted Successfully";

                string path = Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak";
                if (File.Exists(path))
                {
                    ReplaceByte1();
                }
                else
                {

                }
            }
            else
            {
                MessageBox.Show("Please Select your pak folder in settings!");
            }
        }

        bool checkPak()
        {
            if (Properties.Settings.Default.pakFiles == "")
            {
                return false;
            }
            else
            {
                return true;
            }
        }

        private static byte[] animbp1 = new byte[143]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 070, 101, 109, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 047, 077, 101, 115, 104, 101, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 066, 111, 100, 121, 095, 065, 110, 105, 109, 066, 080, 046, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 066, 111, 100, 121, 095, 065, 110, 105, 109, 066, 080, 095, 067
        };

        private static byte[] animbp2 = new byte[143]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 077, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 047, 077, 101, 115, 104, 101, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 095, 065, 110, 105, 109, 066, 080, 046, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 095, 065, 110, 105, 109, 066, 080, 095, 067, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000
        };

        private static byte[] bodymesh1 = new byte[127]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 070, 101, 109, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 047, 077, 101, 115, 104, 101, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 066, 111, 100, 121, 046, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 066, 111, 100, 121
        };

        private static byte[] bodymesh2 = new byte[127]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 077, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 047, 077, 101, 115, 104, 101, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 046, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000
        };

        private static byte[] headanimbp1 = new byte[149]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 070, 101, 109, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 047, 077, 101, 115, 104, 101, 115, 047, 080, 097, 114, 116, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 072, 101, 097, 100, 095, 065, 110, 105, 109, 066, 080, 046, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114 ,080 ,074 ,115 ,095 ,048 ,049 ,095 ,072 ,101 ,097 ,100 ,095 ,065 ,110 ,105, 109, 066, 080, 095, 067
        };

        private static byte[] headanimbp2 = new byte[149]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 077, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 047, 077, 101, 115, 104, 101, 115, 047, 080, 097, 114, 116, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 095, 070, 097, 099, 101, 065, 099, 099, 095, 065, 110, 105, 109, 066, 080, 046, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 095, 070, 097, 099, 101, 065, 099, 099, 095, 065, 110, 105, 109, 066, 080, 095, 067, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000
        };

        private static byte[] headmesh1 = new byte[133]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 070, 101, 109, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 047, 077, 101, 115, 104, 101, 115, 047, 080, 097, 114, 116, 115, 047, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 072, 101, 097, 100, 046, 070, 095, 077, 069, 068, 095, 068, 117, 114, 114, 098, 117, 114, 103, 101, 114, 080, 074, 115, 095, 048, 049, 095, 072, 101, 097, 100
        };

        private static byte[] headmesh2 = new byte[133]
        {
            047, 071, 097, 109, 101, 047, 067, 104, 097, 114, 097, 099, 116, 101, 114, 115, 047, 080, 108, 097, 121, 101, 114, 047, 077, 097, 108, 101, 047, 077, 101, 100, 105, 117, 109, 047, 066, 111, 100, 105, 101, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 047, 077, 101, 115, 104, 101, 115, 047, 080, 097, 114, 116, 115, 047, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 095, 070, 097, 099, 101, 065, 099, 099, 046, 077, 095, 077, 069, 068, 095, 066, 117, 110, 110, 121, 095, 070, 097, 099, 101, 065, 099, 099, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000
        };

        public static void ReplaceBytes(string pak, long offset, byte[] bytes)
        {
            BinaryWriter binaryWriter = new BinaryWriter((Stream)File.Open(pak, FileMode.Open, FileAccess.ReadWrite));
            binaryWriter.BaseStream.Seek(offset, SeekOrigin.Begin);
            binaryWriter.Write(bytes);

            binaryWriter.Close();
        }

        private static void ReplaceByte1()
        {
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1221923680L, animbp1);
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1221923429L, bodymesh1);
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1272593086L, headanimbp1);
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1272592823L, headmesh1);
        }

        private static void RevertByte2()
        {
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1221923680L, animbp2);
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1221923429L, bodymesh2);
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1272593086, headanimbp2);
            ReplaceBytes(Properties.Settings.Default.pakFiles + "\\pakchunk10_s1-WindowsClient.pak", 1272592823L, headmesh2);
        }
    }
}
